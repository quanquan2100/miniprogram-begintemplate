const gulp = require('gulp');
const postcss = require('gulp-postcss');
const cssmin = require('gulp-clean-css');
const rename = require('gulp-rename');
const gutil = require('gulp-util');
const gulpif = require('gulp-if');
const imagemin = require('gulp-imagemin');
const removeLogging = require('gulp-remove-logging');
const babel = require('gulp-babel');
const strip = require('gulp-strip-comments');
const uglify = require('gulp-uglify');
const jsonminify = require('gulp-jsonminify');
const htmlmin = require('gulp-htmlmin');


const options = gutil.env;
const isProduction = process.env.NODE_ENV === 'production';


gulp.task('compile-css', () => {
  return gulp.src(options.src + '/**/*.pcss')
    .pipe(postcss())
    .pipe(gulpif(isProduction, cssmin()))
    .pipe(rename((path) => {
      path.extname = '.wxss';
    }))
    .pipe(gulp.dest(options.dist));
});

gulp.task('compile-js', () => {
  return gulp.src([options.src + '/**/*.js'])
    .pipe(babel({
      plugins: [
        ['transform-object-rest-spread', { useBuiltIns: true }]
      ],
      presets: [
        ['env', {
          loose: true,
          useBuiltIns: true,
          exclude: ['transform-es2015-typeof-symbol']
        }]
      ]
    }))
    .pipe(gulpif(isProduction, removeLogging()))
    .pipe(gulpif(isProduction, strip()))
    .pipe(gulpif(isProduction, uglify()))
    .pipe(gulp.dest(options.dist));
});

gulp.task('compile-json', () => {
  return gulp.src([options.src + '/**/*.json'])
    .pipe(gulpif(isProduction, jsonminify()))
    .pipe(gulp.dest(options.dist));
});

gulp.task('compile-wxml', () => {
  return gulp.src([options.src + '/**/*.wxml'])
    .pipe(gulpif(isProduction, htmlmin({
      collapseWhitespace: true,
      includeAutoGeneratedTags: false,
      keepClosingSlash: true,
      removeComments: true,
      removeEmptyAttributes: true,
      removeScriptTypeAttributes: true,
      removeStyleLinkTypeAttributes: true,
    })))
    .pipe(gulp.dest(options.dist));
});

gulp.task('compile-img', () => {
  return gulp.src([options.src + '/assets/**/*.{jpg,jpeg,png,gif,svg}'])
    .pipe(gulpif(isProduction, imagemin()))
    .pipe(gulp.dest('dist'))
});


gulp.task('build', ['compile-css', 'compile-js', 'compile-wxml', 'compile-json', 'compile-img']);
gulp.task('dev', ['compile-css', 'compile-js']);
